// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id Int @id @default(autoincrement())

  evmAddress Bytes @unique

  OnChainEnergyPurchases OnChainEnergyPurchase[]
  Stories                Story[]
  Messages               UserMessage[]
}

model OnChainEnergyPurchase {
  blockNumber Int
  logIndex    Int

  txHash    Bytes
  blockTime DateTime

  userId Int
  energy Int
  value  Bytes // In native token

  User User @relation(fields: [userId], references: [id])

  @@id([blockNumber, logIndex])
}

model Character {
  id Int @id @default(autoincrement())

  imagePreviewUrl String

  name  String // E.g. "Spot"
  title String // E.g. "The all-seeing dog"
  about String // Short description

  personality String // Used in a prompt, should be hidden from the user

  erc1155Address Bytes?
  erc1155Id      Bytes?
  erc1155NftUri  String?

  Stories  Story[]
  Messages CharacterMessage[]
}

model Story {
  id Int @id @default(autoincrement())

  userId      Int
  characterId Int

  name   String?
  fabula String? // Basic prompt for the story

  summary String? // Summary of the previous lines
  buffer  Int[]   @default([]) // Ids of currently buffered messages

  busy Boolean // Is the story generation in progress?
  pid  Bytes?  @unique // Process responsible for the generation

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  User      User      @relation(fields: [userId], references: [id])
  Character Character @relation(fields: [characterId], references: [id])

  UserMessages      UserMessage[]
  CharacterMessages CharacterMessage[]
}

model UserMessage {
  id Int @id @default(autoincrement())

  storyId Int
  userId  Int

  energyCost Int
  content    String
  createdAt  DateTime @default(now())

  Story Story @relation(fields: [storyId], references: [id])
  User  User  @relation(fields: [userId], references: [id])
}

model CharacterMessage {
  id Int @id @default(autoincrement())

  storyId     Int
  characterId Int

  content   String? // Content generation may be in progress
  createdAt DateTime @default(now())

  Story     Story     @relation(fields: [storyId], references: [id])
  Character Character @relation(fields: [characterId], references: [id])
}
